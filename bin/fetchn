#!/usr/bin/env ruby

#
# fetchn
#
# for fetch nodes
#

$: << File.join(__dir__, '../lib')

require 'archelaus'
corner = ARGV.shift

CORNERS = %w[ NE NW SE SW ]

fail ArgumentError.new(
  "corner #{corner.inspect} should be one of #{CORNERS.inspect}"
) unless CORNERS.include?(corner)

lat, lon = ARGV.shift.to_f, ARGV.shift.to_f

wid, hei = ARGV.shift.to_i, ARGV.shift.to_i
wid = 100 if wid < 1
hei = 100 if hei < 1

  # bin/fetch NE 54.41845 -0.23099
  # bin/fetch NW 54.44860 -0.62332
  #
grid = Archelaus.compute_grid(
  lat, lon,
  100, # meters, 100m between one hexagon to the next
  wid, hei,
  corner.downcase.to_sym)

Archelaus.fetch_nodes(grid)

